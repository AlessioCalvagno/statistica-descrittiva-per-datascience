setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/2 - Sintetizzare i Dati con R")
Fi<-Ni/N
setwd("C:\Users\aless\Desktop\MASTER DATA SCIENCE\statistica-descrittiva-per-datascience\3 - Visualizzazioni con ggplot2")
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/3 - Visualizzazioni con ggplot2")
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/3 - Visualizzazioni con ggplot2")
install.packages("ggplot2")
library(ggplot2)
data("iris")
attach(iris)
?geom_bar
?aes
#faccio grafico di distribuzine assoluta di Species
ggplot((data=iris))+
geom_bar(aes(x=Species),
stat = "count",
col="black",
fill="blue")
ggplot((data=iris))+
geom_bar(aes(x=Species),
stat = "count",
col="black",
fill="blue")+
labs(title="Absolute Species frequency distribution")
#faccio grafico di distribuzine assoluta di Species
ggplot((data=iris))+
geom_bar(aes(x=Species),
stat = "count",
col="black",
fill="blue")+
labs(title="Absolute Species frequency distribution")+
theme_dark()
#faccio grafico di distribuzine assoluta di Species
ggplot((data=iris))+
geom_bar(aes(x=Species),
stat = "count",
col="black",
fill="blue")+
labs(title="Absolute Species frequency distribution")+
theme_bw()
ggplot((data=iris))+
geom_bar(aes(x=Species),
stat = "count",
col="black",
fill="blue")+
labs(title="Absolute Species frequency distribution")+
theme_bw()
min(Petal.Length)
man(Petal.Length)
max(Petal.Length)
seq(1,7,2)
?cut
lunghezza_cl = cut(Petal.Length,seq(1,7,2))
ggplot(data=iris)+
geom_bar(aes(x=lunghezza_cl,fill=Species),
col=black)
lunghezza_cl = cut(Petal.Length,seq(1,7,2))
ggplot(data=iris)+
geom_bar(aes(x=lunghezza_cl,fill=Species),
col="black")
?geom_bar
ggplot(data=iris)+
geom_bar(aes(x=lunghezza_cl,fill=Species),
col="black",
position = "fill")
ggplot(data=iris)+
geom_bar(aes(x=lunghezza_cl,fill=Species),
col="black",
position = "dodge")
lunghezza_cl
Petal.Length[23]
?cut_interval
?cut
lunghezza_cl = cut(Petal.Length,seq(1,7,2),right = F)
ggplot(data=iris)+
geom_bar(aes(x=lunghezza_cl,fill=Species),
col="black",
position = "dodge")
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightred")
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightblue")
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightblue")+
labs(title="Boxplot of Petal Length vs Species")
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightblue")+
labs(title="Boxplot of Petal length vs Species")
+theme_minimal()
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightblue")+
labs(title="Boxplot of Petal length vs Species")+
theme_minimal()
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightblue")+
labs(title="Boxplot of Petal length vs Species")+
theme_void()
#provo a fare box plot
ggplot(data=iris)+
geom_boxplot(aes(x=Species,y=Petal.Length),fill="lightblue")+
labs(title="Boxplot of Petal length vs Species")+
theme_gray()
attach(mtcars)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/5 - Misure di Variabilità con R")
data("mtcars")
attach(mtcars)
?mtcats
?mtcars
table(vs)
summary(mpg)
summary(hp)
?cut
hp_cl = cut(hp,seq(52,336,50))
hp_cl
hp_cl = cut(hp,seq(52,336,50),right=F)
hp_cl = cut(hp,seq(52,336,50),right=F)
hp_cl
hp[31]
?seq
hp_cl = cut(hp,seq(50,350,50),right=F)
hp_cl
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon")
t = table(vs)
print(t)
?aes
length(vs)
length(mpg)
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon")
data("iris")
vs_factor = cut(vs)
?cu
?cut
vs_cl = cut(vs,c(0,0.5),right=F)
vs_cl = cut(vs,2,right=F)
vs
vs_còs
vs_cl
vs_cl = cut(vs,2,right=T)
vs_cl
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/5 - Misure di Variabilità con R")
data("mtcars")
attach(mtcars)
#voglio vedere (in generale) come vanno i consumi, legandoli a potenza del motore
# e tipo di motore (a v o a pianale) -> quindi boxplot di mpg vs hp e vs
library(ggplot2)
hp_cl = cut(hp,seq(50,350,50),right=F)
vs_cl = cut(vs,2,right=T) #in questo modo dico a cut di dividere vs in 2 fattori
#la funzione si calcola da sola gli estremi degli intervalli
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon")
?labs
?xlab
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon",x="Engine shape",y="Consumption (mpg)")+
scale_x_discrete(labels=c("Straight","V-shape"))
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon",x="Engine shape",y="Consumption (mpg)")+
scale_x_discrete(labels=c("Straight","V-shape"))+
scale_color_continuous(name="Motor power (hp)")
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon",x="Engine shape",y="Consumption (mpg)")+
scale_x_discrete(labels=c("Straight","V-shape"))+
scale_color_continuous(name="Motor power (hp)")
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Miles per gallon",
x="Engine shape",
y="Consumption (mpg)",
fill="Motor power (hp)")+ #il fill messo qui modificai il titolo della legenda
scale_x_discrete(labels=c("Straight","V-shape"))
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Cars' consumption vs Engine shape",
x="Engine shape",
y="Consumption (mpg)",
fill="Motor power (hp)")+ #il fill messo qui modificai il titolo della legenda
scale_x_discrete(labels=c("Straight","V-shape"))
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Cars consumption vs Engine shape",
x="Engine shape",
y="Consumption (mpg)",
fill="Motor power (hp)")+ #il fill messo qui modificai il titolo della legenda
scale_x_discrete(labels=c("Straight","V-shape"))
summary(mpg)
#via molto veloce: uso summary
summary(mpg)
mpg_IQR = IQR(mpg)
#creo funzione custom per ottenere parametri di variabilità
variability.summary = function(x) {
n = lenght(x)
x_mu = sum(x)/n
x_IQR = IQR(X)
x_var = sum((x-x_mu)^2)/n
x_sigma = sqrt(x_var)
x_CV = x_sigma/x_mu * 100
d = data.frame(n = n, mu=x_mu,variance = x_var,sigma = x_sigma, CV = x_CV)
return(d)
}
mpg_summary = variability.summary(mpg)
print(mpg_summary)
#creo funzione custom per ottenere parametri di variabilità
variability.summary = function(x) {
n = length(x)
x_mu = sum(x)/n
x_IQR = IQR(X)
x_var = sum((x-x_mu)^2)/n
x_sigma = sqrt(x_var)
x_CV = x_sigma/x_mu * 100
d = data.frame(n = n, mu=x_mu,variance = x_var,sigma = x_sigma, CV = x_CV)
return(d)
}
mpg_summary = variability.summary(mpg)
print(mpg_summary)
#creo funzione custom per ottenere parametri di variabilità
variability.summary = function(x) {
n = length(x)
x_mu = sum(x)/n
x_IQR = IQR(x)
x_var = sum((x-x_mu)^2)/n
x_sigma = sqrt(x_var)
x_CV = x_sigma/x_mu * 100
d = data.frame(n = n, mu=x_mu,variance = x_var,sigma = x_sigma, CV = x_CV)
return(d)
}
mpg_summary = variability.summary(mpg)
print(mpg_summary)
#via molto veloce per indici di posizione: uso summary
summary(mpg)
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/5 - Misure di Variabilità con R")
data("mtcars")
attach(mtcars)
#voglio vedere (in generale) come vanno i consumi, legandoli a potenza del motore
# e tipo di motore (a v o a pianale) -> quindi boxplot di mpg vs hp e vs
library(ggplot2)
hp_cl = cut(hp,seq(50,350,50),right=F)
vs_cl = cut(vs,2,right=T) #in questo modo dico a cut di dividere vs in 2 fattori
#la funzione si calcola da sola gli estremi degli intervalli
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Cars consumption vs Engine shape",
x="Engine shape",
y="Consumption (mpg)",
fill="Motor power (hp)")+ #il fill messo qui modifica il titolo della legenda
scale_x_discrete(labels=c("Straight","V-shape"))
#qualche misura di variabilità
#voglio confrontare la distribuzione di mpg (consumi) e di cyl (num. cilindri)
#via molto veloce per indici di posizione: uso summary
summary(mpg)
#creo funzione custom per ottenere parametri di variabilità
variability.summary = function(x) {
n = length(x)
x_mu = sum(x)/n #oppure mean(x)
x_IQR = IQR(x)
x_var = sum((x-x_mu)^2)/n #oppure var(x)
x_sigma = sqrt(x_var) #oppure sd(x)
x_CV = x_sigma/x_mu * 100
d = data.frame(n = n, mu=x_mu,variance = x_var,sigma = x_sigma, CV = x_CV)
return(d)
}
mpg_summary = variability.summary(mpg)
print(mpg_summary)
print("Variability summary for mpg")
print(mpg_summary)
print("-------------------------")
mpg_summary = variability.summary(mpg)
print("Variability summary for mpg")
print(mpg_summary)
print("-------------------------")
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/5 - Misure di Variabilità con R")
data("mtcars")
attach(mtcars)
#voglio vedere (in generale) come vanno i consumi, legandoli a potenza del motore
# e tipo di motore (a v o a pianale) -> quindi boxplot di mpg vs hp e vs
library(ggplot2)
hp_cl = cut(hp,seq(50,350,50),right=F)
vs_cl = cut(vs,2,right=T) #in questo modo dico a cut di dividere vs in 2 fattori
#la funzione si calcola da sola gli estremi degli intervalli
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Cars consumption vs Engine shape",
x="Engine shape",
y="Consumption (mpg)",
fill="Motor power (hp)")+ #il fill messo qui modifica il titolo della legenda
scale_x_discrete(labels=c("Straight","V-shape"))
#qualche misura di variabilità
#voglio confrontare la distribuzione di mpg (consumi) e di cyl (num. cilindri)
#via molto veloce per indici di posizione: uso summary
summary(mpg)
#creo funzione custom per ottenere parametri di variabilità
variability.summary = function(x) {
n = length(x)
x_mu = sum(x)/n #oppure mean(x)
x_IQR = IQR(x)
x_var = sum((x-x_mu)^2)/n #oppure var(x)
x_sigma = sqrt(x_var) #oppure sd(x)
x_CV = x_sigma/x_mu * 100
d = data.frame(n = n, mu=x_mu,variance = x_var,sigma = x_sigma, CV = x_CV)
return(d)
}
mpg_summary = variability.summary(mpg)
print("Variability summary for mpg")
print(mpg_summary)
print("-------------------------")
print("Variability summary for mpg\n"+mpg_summary+"---------------")
print("ciao"+" aa")
setwd("C:/Users/aless/Desktop/MASTER DATA SCIENCE/statistica-descrittiva-per-datascience/5 - Misure di Variabilità con R")
data("mtcars")
attach(mtcars)
#voglio vedere (in generale) come vanno i consumi, legandoli a potenza del motore
# e tipo di motore (a v o a pianale) -> quindi boxplot di mpg vs hp e vs
library(ggplot2)
hp_cl = cut(hp,seq(50,350,50),right=F)
vs_cl = cut(vs,2,right=T) #in questo modo dico a cut di dividere vs in 2 fattori
#la funzione si calcola da sola gli estremi degli intervalli
ggplot(data=mtcars)+
geom_boxplot(aes(x=vs_cl,y=mpg,fill=hp_cl))+
labs(title="Cars consumption vs Engine shape",
x="Engine shape",
y="Consumption (mpg)",
fill="Motor power (hp)")+ #il fill messo qui modifica il titolo della legenda
scale_x_discrete(labels=c("Straight","V-shape"))
#qualche misura di variabilità
#voglio confrontare la distribuzione di mpg (consumi) e di cyl (num. cilindri)
#via molto veloce per indici di posizione: uso summary
summary(mpg)
#creo funzione custom per ottenere parametri di variabilità
variability.summary = function(x) {
n = length(x)
x_mu = sum(x)/n #oppure mean(x)
x_IQR = IQR(x)
x_var = sum((x-x_mu)^2)/n #oppure var(x)
x_sigma = sqrt(x_var) #oppure sd(x)
x_CV = x_sigma/x_mu * 100
d = data.frame(n = n, mu=x_mu,variance = x_var,sigma = x_sigma, CV = x_CV)
return(d)
}
mpg_summary = variability.summary(mpg)
print("Variability summary for mpg")
print(mpg_summary)
print("-------------------------")
#variabile cyl
summary(cyl)
cyl_summary = variability.summary(cyl)
print("Variability summary for cyl")
print(cyl_summary)
print("-------------------------")
print(mpg_summary)
print(cyl_summary)
?geom_bar
ggplot(data=mtcars)+
geom_bar(aes(x=vs_cl,fill=hp_cl),
col="black",
position = "dodge")
ggplot(data=mtcars)+
geom_bar(aes(x=vs_cl,fill=hp_cl),
col="black",
position = "dodge")+
scale_x_discrete(labels=c("Straight","V-shape"))
ggplot(data=mtcars)+
geom_bar(aes(x=vs_cl,fill=hp_cl),
col="black",
position = "dodge")+
scale_x_discrete(labels=c("Straight","V-shape"))+
labs(title="Absolute motor shape distribution",
x="Engine shape",
fill="Motor power (hp)")+ #il fill messo qui modifica il titolo della legenda
#qualche misura di variabilità
#voglio confrontare la distribuzione di mpg (consumi) e di cyl (num. cilindri)
#via molto veloce per indici di posizione: uso summary
summary(mpg)
ggplot(data=mtcars)+
geom_bar(aes(x=vs_cl,fill=hp_cl),
col="black",
position = "dodge")+
scale_x_discrete(labels=c("Straight","V-shape"))+
labs(title="Absolute motor shape distribution",
x="Engine shape",
fill="Motor power (hp)") #il fill messo qui modifica il titolo della legenda
